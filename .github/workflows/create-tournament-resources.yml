name: Auto-Create Tournament Resources

on:
  push:
    branches:
      - main
    paths:
      - 'content/tournaments/*.md'

jobs:
  create-resources:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Get changed tournament files
        id: changed-files
        run: |
          echo "files=$(git diff --name-only HEAD^ HEAD | grep 'content/tournaments/.*\.md' | xargs)" >> $GITHUB_OUTPUT
      
      - name: Process tournaments
        if: steps.changed-files.outputs.files != ''
        run: |
          for file in ${{ steps.changed-files.outputs.files }}; do
            if [ -f "$file" ]; then
              echo "Processing $file"
              
              # Extract slug from filename
              slug=$(basename "$file" .md)
              
              # Check if status is published
              status=$(grep -m1 "^status:" "$file" | sed 's/status: *//' | tr -d '"' | tr -d "'")
              
              # Check if googleSheetId already exists
              has_sheet=$(grep -c "^googleSheetId:" "$file" || true)
              
              echo "Tournament: $slug"
              echo "Status: $status"
              echo "Has sheet: $has_sheet"
              
              if [ "$status" = "published" ] && [ "$has_sheet" -eq 0 ]; then
                echo "Creating resources for $slug"
                
                # Extract title
                title=$(grep -m1 "^title:" "$file" | sed 's/title: *//' | tr -d '"' | sed "s/'//g")
                
                # Call API to create resources
                response=$(curl -s -w "\n%{http_code}" -X POST \
                  "https://joyouschess.netlify.app/api/create-tournament-resources" \
                  -H "Content-Type: application/json" \
                  -d "{\"tournamentSlug\": \"$slug\", \"tournamentTitle\": \"$title\"}")
                
                http_code=$(echo "$response" | tail -n1)
                body=$(echo "$response" | sed '$d')
                
                if [ "$http_code" -eq 200 ]; then
                  echo "✅ Successfully created resources for $slug"
                  echo "$body"
                else
                  echo "❌ Failed to create resources for $slug (HTTP $http_code)"
                  echo "$body"
                fi
              else
                echo "⏭️  Skipping $slug (status: $status, has_sheet: $has_sheet)"
              fi
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

